{"ast":null,"code":"var _jsxFileName = \"/home/mustafa/hackathons/JODDB_hackathon/src/templates/task_starting.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../static/styles_task_starting.scss';\nimport Person from '../assets/person_add_task.png';\nimport Header from './header';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TaskTimer = ({\n  taskState\n}) => {\n  _s();\n  const [time, setTime] = useState(0);\n  useEffect(() => {\n    let interval = null;\n    if (taskState === 'active') {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [taskState]); // Dependency: re-run effect when taskState changes\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-display\",\n    children: formatTime(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Page Component ---\n_s(TaskTimer, \"5hWQWrdOaoNaY+yZN4rUVWF/ZFM=\");\n_c = TaskTimer;\nconst StartTask = () => {\n  _s2();\n  // States: 'idle', 'pending', 'active', 'paused'\n  const [taskState, setTaskState] = useState('idle');\n  const handlers = {\n    // Left Column Button: Show Middle Column\n    handleShowTask: () => setTaskState('pending'),\n    // Middle Column Button: Don't implement\n    handleChangeTask: () => console.log('Change Task Clicked (Not Implemented)'),\n    // Middle Column Button: Show Right Column\n    handleStartTask: () => setTaskState('active'),\n    // Right Column Button: Pause Timer\n    handlePauseTask: () => setTaskState('paused'),\n    // Right Column Button: Resume Timer\n    handleResumeTask: () => setTaskState('active'),\n    // Right Column Button: Go to Page 3\n    handleFinishTask: () => {\n      console.log('Task Finished. Transition to Page 3.');\n      // Reset state for this demo\n      setTaskState('idle');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-sidebar\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"left-column-container\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-icon-placeholder\",\n              children: /*#__PURE__*/_jsxDEV(\"img\", {\n                src: Person,\n                className: \"person-logo\",\n                alt: \"Start task icon\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary\",\n              onClick: handlers.handleShowTask,\n              children: \"START A NEW TASK\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-details-section\",\n          children: taskState !== 'idle' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"TASK DETAILS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 7\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-field\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"PERFORMED TASK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-field\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"SERIAL NUMBER\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 9\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-field\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"SELECT NUMBERS OF DEVICES\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 11\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 9\n              }, this), taskState === 'pending' && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  onClick: handlers.handleChangeTask,\n                  children: \"CHANGE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 13\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: handlers.handleStartTask,\n                  children: \"START\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 13\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 11\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 7\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 1\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-timer-section\",\n          children: (taskState === 'active' || taskState === 'paused') && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"TASK HAS STARTED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TaskTimer, {\n              taskState: taskState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [taskState === 'active' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: handlers.handlePauseTask,\n                children: \"PAUSE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: handlers.handleResumeTask,\n                children: \"RESUME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: handlers.handleFinishTask,\n                children: \"FINISH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s2(StartTask, \"MMJICNP+033OSrAtgN+3JNLEkEA=\");\n_c2 = StartTask;\nexport default StartTask;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskTimer\");\n$RefreshReg$(_c2, \"StartTask\");","map":{"version":3,"names":["React","useState","useEffect","Person","Header","jsxDEV","_jsxDEV","Fragment","_Fragment","TaskTimer","taskState","_s","time","setTime","interval","setInterval","prevTime","clearInterval","formatTime","seconds","mins","Math","floor","toString","padStart","secs","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","StartTask","_s2","setTaskState","handlers","handleShowTask","handleChangeTask","console","log","handleStartTask","handlePauseTask","handleResumeTask","handleFinishTask","src","alt","onClick","type","_c2","$RefreshReg$"],"sources":["/home/mustafa/hackathons/JODDB_hackathon/src/templates/task_starting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../static/styles_task_starting.scss';\nimport Person from '../assets/person_add_task.png';\nimport Header from './header';\n\n\nconst TaskTimer = ({ taskState }) => {\n  const [time, setTime] = useState(0);\n\n  useEffect(() => {\n    let interval = null;\n    if (taskState === 'active') {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n    return () => clearInterval(interval);\n  }, [taskState]); // Dependency: re-run effect when taskState changes\n\n  // Format time as MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  return (\n    <div className=\"timer-display\">\n      {formatTime(time)}\n    </div>\n  );\n};\n\n\n// --- Main Page Component ---\nconst StartTask = () => {\n  // States: 'idle', 'pending', 'active', 'paused'\n  const [taskState, setTaskState] = useState('idle');\n\n  const handlers = {\n    // Left Column Button: Show Middle Column\n    handleShowTask: () => setTaskState('pending'),\n    \n    // Middle Column Button: Don't implement\n    handleChangeTask: () => console.log('Change Task Clicked (Not Implemented)'),\n    \n    // Middle Column Button: Show Right Column\n    handleStartTask: () => setTaskState('active'),\n    \n    // Right Column Button: Pause Timer\n    handlePauseTask: () => setTaskState('paused'),\n    \n    // Right Column Button: Resume Timer\n    handleResumeTask: () => setTaskState('active'),\n    \n    // Right Column Button: Go to Page 3\n    handleFinishTask: () => {\n      console.log('Task Finished. Transition to Page 3.');\n      // Reset state for this demo\n      setTaskState('idle'); \n    },\n  };\n\n  return (\n    <div className=\"page-container\">\n      <Header />\n      <main className=\"main-content\">\n        <div className=\"task-view-container\">\n\n        {/* === Left Column (Always Visible) === */}\n        <div className=\"task-sidebar\">\n          {/* This is the new gray container */}\n          <div className=\"left-column-container\">\n            <div className=\"task-icon-placeholder\">\n              <img src={Person} className='person-logo' alt=\"Start task icon\"/>\n            </div>\n            <button className=\"btn btn-primary\" onClick={handlers.handleShowTask}>\n              START A NEW TASK\n            </button>\n          </div>\n        </div>\n\n          {/* === Middle Column (Task Details) === */}\n{/* === Middle Column (Task Details) === */}\n<div className=\"task-details-section\">\n  {/* CHANGE THIS LINE: \n    Show this column as long as we are not 'idle'\n  */}\n  {(taskState !== 'idle') && (\n    <>\n      <h2 className=\"section-title\">TASK DETAILS</h2>\n      <div className=\"task-form\">\n        {/* These data fields will stay visible */}\n        <div className=\"data-field\">\n          <span>PERFORMED TASK</span>\n        </div>\n        <div className=\"data-field\">\n          <span>SERIAL NUMBER</span>\n        </div>\n        <div className=\"data-field\">\n          <span>SELECT NUMBERS OF DEVICES</span>\n        </div>\n\n        {/* ADD THIS WRAPPER:\n          Only show the buttons when the task is 'pending'\n        */}\n        {taskState === 'pending' && (\n          <div className=\"button-group\">\n            <button type=\"button\" className=\"btn btn-secondary\" onClick={handlers.handleChangeTask}>\n              CHANGE\n            </button>\n            <button type=\"button\" className=\"btn btn-primary\" onClick={handlers.handleStartTask}>\n              START\n            </button>\n          </div>\n        )}\n      </div>\n    </>\n  )}\n</div>\n\n          {/* === Right Column (Task Timer) === */}\n          <div className=\"task-timer-section\">\n            {/* Content renders only when state is 'active' or 'paused' */}\n            {(taskState === 'active' || taskState === 'paused') && (\n              <>\n                <h2 className=\"section-title\">TASK HAS STARTED</h2>\n                <TaskTimer taskState={taskState} />\n                <div className=\"button-group\">\n                  {taskState === 'active' ? (\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handlers.handlePauseTask}>\n                      PAUSE\n                    </button>\n                  ) : (\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handlers.handleResumeTask}>\n                      RESUME\n                    </button>\n                  )}\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={handlers.handleFinishTask}>\n                    FINISH\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default StartTask;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}