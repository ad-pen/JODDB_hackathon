{"ast":null,"code":"var _jsxFileName = \"/home/mustafa-alkilani/hackathon/app/JODDB_hackathon.back/src/templates/SubmittedTasks.jsx\";\nimport React from 'react';\nimport '../static/styles_submittedTasks.scss';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst mockTasks = [{\n  id: 1,\n  opName: \"Alpha Test\",\n  serialNumber: \"SN-12345\",\n  outputNumber: \"OUT-001\",\n  status: \"Pending\"\n}, {\n  id: 2,\n  opName: \"Bravo Check\",\n  serialNumber: \"SN-67890\",\n  outputNumber: \"OUT-002\",\n  status: \"Completed\"\n}, {\n  id: 3,\n  opName: \"Charlie Scan\",\n  serialNumber: \"SN-54321\",\n  outputNumber: \"OUT-003\",\n  status: \"Pending\"\n}, {\n  id: 4,\n  opName: \"Delta Repair\",\n  serialNumber: \"SN-09876\",\n  outputNumber: \"OUT-004\",\n  status: \"Failed\"\n}];\nconst TaskCard = ({\n  task\n}) => {\n  const statusClass = task.status.toLowerCase();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"task-card\",\n    tabIndex: \"0\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-details\",\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"OP NAME:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.opName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"DEVICE SERIAL NUMBER:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.serialNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"OUTPUT NUMBER:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: task.outputNumber\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"task-status\",\n      children: [\"STATUS: \", /*#__PURE__*/_jsxDEV(\"span\", {\n        className: `status ${statusClass}`,\n        children: task.status.toUpperCase()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_c = TaskCard;\nconst SubmittedTasks = () => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"submitted-tasks-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"submitted-title\",\n        children: \"SUBMITTED TASKS\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n        className: \"title-divider\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tasks-grid\",\n        children: mockTasks.map(task => /*#__PURE__*/_jsxDEV(TaskCard, {\n          task: task\n        }, task.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c2 = SubmittedTasks;\nexport default SubmittedTasks;\nvar _c, _c2;\n$RefreshReg$(_c, \"TaskCard\");\n$RefreshReg$(_c2, \"SubmittedTasks\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","Fragment","_Fragment","mockTasks","id","opName","serialNumber","outputNumber","status","TaskCard","task","statusClass","toLowerCase","className","tabIndex","children","fileName","_jsxFileName","lineNumber","columnNumber","toUpperCase","_c","SubmittedTasks","map","_c2","$RefreshReg$"],"sources":["/home/mustafa-alkilani/hackathon/app/JODDB_hackathon.back/src/templates/SubmittedTasks.jsx"],"sourcesContent":["import React from 'react';\nimport '../static/styles_submittedTasks.scss';\nconst mockTasks = [\n  {\n    id: 1,\n    opName: \"Alpha Test\",\n    serialNumber: \"SN-12345\",\n    outputNumber: \"OUT-001\",\n    status: \"Pending\"\n  },\n  {\n    id: 2,\n    opName: \"Bravo Check\",\n    serialNumber: \"SN-67890\",\n    outputNumber: \"OUT-002\",\n    status: \"Completed\"\n  },\n  {\n    id: 3,\n    opName: \"Charlie Scan\",\n    serialNumber: \"SN-54321\",\n    outputNumber: \"OUT-003\",\n    status: \"Pending\"\n  },\n  {\n    id: 4,\n    opName: \"Delta Repair\",\n    serialNumber: \"SN-09876\",\n    outputNumber: \"OUT-004\",\n    status: \"Failed\"\n  }\n];\nconst TaskCard = ({ task }) => {\n  const statusClass = task.status.toLowerCase(); \n\n  return (\n    <div className=\"task-card\" tabIndex=\"0\">\n      <div className=\"task-details\">\n        <ul>\n          <li>\n            <strong>OP NAME:</strong>\n            <span>{task.opName}</span>\n          </li>\n          <li>\n            <strong>DEVICE SERIAL NUMBER:</strong>\n            <span>{task.serialNumber}</span>\n          </li>\n          <li>\n            <strong>OUTPUT NUMBER:</strong>\n            <span>{task.outputNumber}</span>\n          </li>\n        </ul>\n      </div>\n      <div className=\"task-status\">\n        STATUS: <span className={`status ${statusClass}`}>{task.status.toUpperCase()}</span>\n      </div>\n    </div>\n  );\n};\n\nconst SubmittedTasks = () => {\n  return (\n   <> \n    <main className=\"submitted-tasks-container\">\n      <h1 className=\"submitted-title\">SUBMITTED TASKS</h1>\n      <hr className=\"title-divider\" />\n      \n      <div className=\"tasks-grid\">\n        {/* Map over the mock tasks and render a card for each */}\n        {mockTasks.map(task => (\n          <TaskCard key={task.id} task={task} />\n        ))}\n      </div>\n    </main>\n    </>\n  );\n};\n\nexport default SubmittedTasks;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}