{"ast":null,"code":"var _jsxFileName = \"/home/mustafa-alkilani/hackathon/app/JODDB_hackathon/src/templates/task_starting.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport '../';\n\n// --- Header Component ---\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = () => /*#__PURE__*/_jsxDEV(\"header\", {\n  className: \"header\",\n  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"logo-container\",\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"logo-placeholder\",\n      children: \"[JODDB Logo]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"user-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-icon\",\n      children: \"[User Icon]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"username\",\n      children: \"Username\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"language-toggle\",\n      children: \"\\u0639\\u0631\\u0628\\u064A\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu-icon\",\n      children: \"[Menu]\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n\n// --- Timer Component ---\n// This component manages the timer logic\n_c = Header;\nconst TaskTimer = ({\n  taskState\n}) => {\n  _s();\n  const [time, setTime] = useState(660); // 11:00 in seconds\n\n  useEffect(() => {\n    let interval = null;\n    // Start interval only if state is 'active'\n    if (taskState === 'active') {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    } else {\n      // Clear interval if state is 'paused' or component unmounts\n      clearInterval(interval);\n    }\n    // Cleanup function to clear interval\n    return () => clearInterval(interval);\n  }, [taskState]); // Dependency: re-run effect when taskState changes\n\n  // Format time as MM:SS\n  const formatTime = seconds => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"timer-display\",\n    children: formatTime(time)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n};\n\n// --- Main Page Component ---\n_s(TaskTimer, \"1ZMS0aeCvTSCDRCqrYqRFAdufpw=\");\n_c2 = TaskTimer;\nconst Page2 = () => {\n  _s2();\n  // States: 'idle', 'pending', 'active', 'paused'\n  const [taskState, setTaskState] = useState('idle');\n  const handlers = {\n    // Left Column Button: Show Middle Column\n    handleShowTask: () => setTaskState('pending'),\n    // Middle Column Button: Don't implement\n    handleChangeTask: () => console.log('Change Task Clicked (Not Implemented)'),\n    // Middle Column Button: Show Right Column\n    handleStartTask: () => setTaskState('active'),\n    // Right Column Button: Pause Timer\n    handlePauseTask: () => setTaskState('paused'),\n    // Right Column Button: Resume Timer\n    handleResumeTask: () => setTaskState('active'),\n    // Right Column Button: Go to Page 3\n    handleFinishTask: () => {\n      console.log('Task Finished. Transition to Page 3.');\n      // Reset state for this demo\n      setTaskState('idle');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"page-container\",\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n      className: \"main-content\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"task-view-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-sidebar\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"task-icon-placeholder\",\n            children: \"[Task Icon]\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary\",\n            onClick: handlers.handleShowTask,\n            children: \"START A NEW TASK\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-details-section\",\n          children: taskState === 'pending' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"TASK DETAILS\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"task-form\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-field\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"PERFORMED TASK\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-field\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"SERIAL NUMBER\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"data-field\",\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  children: \"SELECT NUMBERS OF DEVICES\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"button-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-secondary\",\n                  onClick: handlers.handleChangeTask,\n                  children: \"CHANGE\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  type: \"button\",\n                  className: \"btn btn-primary\",\n                  onClick: handlers.handleStartTask,\n                  children: \"START\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"task-timer-section\",\n          children: (taskState === 'active' || taskState === 'paused') && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"section-title\",\n              children: \"TASK HAS STARTED\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TaskTimer, {\n              taskState: taskState\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"button-group\",\n              children: [taskState === 'active' ? /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: handlers.handlePauseTask,\n                children: \"PAUSE\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-secondary\",\n                onClick: handlers.handleResumeTask,\n                children: \"RESUME\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"button\",\n                className: \"btn btn-primary\",\n                onClick: handlers.handleFinishTask,\n                children: \"FINISH\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s2(Page2, \"MMJICNP+033OSrAtgN+3JNLEkEA=\");\n_c3 = Page2;\nexport default Page2;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"TaskTimer\");\n$RefreshReg$(_c3, \"Page2\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Header","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","TaskTimer","taskState","_s","time","setTime","interval","setInterval","prevTime","clearInterval","formatTime","seconds","mins","Math","floor","toString","padStart","secs","_c2","Page2","_s2","setTaskState","handlers","handleShowTask","handleChangeTask","console","log","handleStartTask","handlePauseTask","handleResumeTask","handleFinishTask","onClick","type","_c3","$RefreshReg$"],"sources":["/home/mustafa-alkilani/hackathon/app/JODDB_hackathon/src/templates/task_starting.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../';\n\n// --- Header Component ---\nconst Header = () => (\n  <header className=\"header\">\n    <div className=\"logo-container\">\n      <span className=\"logo-placeholder\">[JODDB Logo]</span>\n    </div>\n    <div className=\"user-container\">\n      <div className=\"user-icon\">[User Icon]</div>\n      <span className=\"username\">Username</span>\n      <span className=\"language-toggle\">عربي</span>\n      <div className=\"menu-icon\">[Menu]</div>\n      {/* Per your description, the \"notifications\" and \"submitted tasks\" \n        buttons would be rendered inside this menu when clicked.\n      */}\n    </div>\n  </header>\n);\n\n// --- Timer Component ---\n// This component manages the timer logic\nconst TaskTimer = ({ taskState }) => {\n  const [time, setTime] = useState(660); // 11:00 in seconds\n\n  useEffect(() => {\n    let interval = null;\n    // Start interval only if state is 'active'\n    if (taskState === 'active') {\n      interval = setInterval(() => {\n        setTime(prevTime => prevTime + 1);\n      }, 1000);\n    } else {\n      // Clear interval if state is 'paused' or component unmounts\n      clearInterval(interval);\n    }\n    // Cleanup function to clear interval\n    return () => clearInterval(interval);\n  }, [taskState]); // Dependency: re-run effect when taskState changes\n\n  // Format time as MM:SS\n  const formatTime = (seconds) => {\n    const mins = Math.floor(seconds / 60).toString().padStart(2, '0');\n    const secs = (seconds % 60).toString().padStart(2, '0');\n    return `${mins}:${secs}`;\n  };\n\n  return (\n    <div className=\"timer-display\">\n      {formatTime(time)}\n    </div>\n  );\n};\n\n\n// --- Main Page Component ---\nconst Page2 = () => {\n  // States: 'idle', 'pending', 'active', 'paused'\n  const [taskState, setTaskState] = useState('idle');\n\n  const handlers = {\n    // Left Column Button: Show Middle Column\n    handleShowTask: () => setTaskState('pending'),\n    \n    // Middle Column Button: Don't implement\n    handleChangeTask: () => console.log('Change Task Clicked (Not Implemented)'),\n    \n    // Middle Column Button: Show Right Column\n    handleStartTask: () => setTaskState('active'),\n    \n    // Right Column Button: Pause Timer\n    handlePauseTask: () => setTaskState('paused'),\n    \n    // Right Column Button: Resume Timer\n    handleResumeTask: () => setTaskState('active'),\n    \n    // Right Column Button: Go to Page 3\n    handleFinishTask: () => {\n      console.log('Task Finished. Transition to Page 3.');\n      // Reset state for this demo\n      setTaskState('idle'); \n    },\n  };\n\n  return (\n    <div className=\"page-container\">\n      <Header />\n      <main className=\"main-content\">\n        <div className=\"task-view-container\">\n\n          {/* === Left Column (Always Visible) === */}\n          <div className=\"task-sidebar\">\n            <div className=\"task-icon-placeholder\">[Task Icon]</div>\n            <button className=\"btn btn-primary\" onClick={handlers.handleShowTask}>\n              START A NEW TASK\n            </button>\n          </div>\n\n          {/* === Middle Column (Task Details) === */}\n          <div className=\"task-details-section\">\n            {/* Content renders only when state is 'pending' */}\n            {taskState === 'pending' && (\n              <>\n                <h2 className=\"section-title\">TASK DETAILS</h2>\n                <div className=\"task-form\">\n                  {/* These are now styled divs, not inputs */}\n                  <div className=\"data-field\">\n                    <span>PERFORMED TASK</span>\n                  </div>\n                  <div className=\"data-field\">\n                    <span>SERIAL NUMBER</span>\n                  </div>\n                  <div className=\"data-field\">\n                    <span>SELECT NUMBERS OF DEVICES</span>\n                  </div>\n                  <div className=\"button-group\">\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handlers.handleChangeTask}>\n                      CHANGE\n                    </button>\n                    <button type=\"button\" className=\"btn btn-primary\" onClick={handlers.handleStartTask}>\n                      START\n                    </button>\n                  </div>\n                </div>\n              </>\n            )}\n          </div>\n\n          {/* === Right Column (Task Timer) === */}\n          <div className=\"task-timer-section\">\n            {/* Content renders only when state is 'active' or 'paused' */}\n            {(taskState === 'active' || taskState === 'paused') && (\n              <>\n                <h2 className=\"section-title\">TASK HAS STARTED</h2>\n                <TaskTimer taskState={taskState} />\n                <div className=\"button-group\">\n                  {taskState === 'active' ? (\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handlers.handlePauseTask}>\n                      PAUSE\n                    </button>\n                  ) : (\n                    <button type=\"button\" className=\"btn btn-secondary\" onClick={handlers.handleResumeTask}>\n                      RESUME\n                    </button>\n                  )}\n                  <button type=\"button\" className=\"btn btn-primary\" onClick={handlers.handleFinishTask}>\n                    FINISH\n                  </button>\n                </div>\n              </>\n            )}\n          </div>\n\n        </div>\n      </main>\n    </div>\n  );\n};\n\nexport default Page2;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}